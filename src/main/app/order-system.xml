<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <flow name="retrieveOrders">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/retrieveOrders" doc:name="HTTP"/>
        <set-payload value="#['Test']" doc:name="Set Payload"/>
    </flow>
    <flow name="processOrders">
        <set-variable variableName="orders" value="#[payload]" doc:name="Variable: Store Orders from setMsg"/>
        <set-payload value="#[{'international': java.util.Map&lt;&gt;[], 'domestic': java.util.Map&lt;&gt;[]}]" doc:name="Set Payload: Order Schema"/>
        <expression-component doc:name="Expression: populate international key"><![CDATA[for (order: flowVars.orders) {
	if(order.'location' == 'worldwide') {
		payload.'international'.add(order);
	}
	else {
		payload.'domestic'.add(order);
	}
}
]]></expression-component>
    </flow>
</mule>
